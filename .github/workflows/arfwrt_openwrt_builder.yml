#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description:   Build OpenWrt with Image Builder
# Instructions:  https://openwrt.org/docs/guide-user/additional-software/imagebuilder
# Download from: https://downloads.openwrt.org/releases
#                https://downloads.immortalwrt.org/releases
#=====================================================================================
name: OpenWrt_ImageBuilder
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "openwrt:21.02.3"
        type: choice
        options:
          - openwrt:22.03.5
          - openwrt:22.03.4
          - openwrt:22.03.3
          - openwrt:22.03.2
          - openwrt:22.03.1
          - openwrt:22.03.0
          - openwrt:21.02.7
          - openwrt:21.02.6
          - openwrt:21.02.5
          - openwrt:21.02.4
          - openwrt:21.02.3
          - openwrt:21.02.2
          - openwrt:21.02.1
          - openwrt:21.02.0
          - openwrt:19.07.10
          - openwrt:19.07.9
          - openwrt:19.07.7
          - openwrt:19.07.6
          - openwrt:19.07.5
          - openwrt:19.07.4
          - openwrt:19.07.3
          - openwrt:19.07.2
          - openwrt:19.07.1
          - openwrt:19.07.0
          - openwrt:18.06.9
          - openwrt:18.06.8
          - openwrt:18.06.7
          - openwrt:18.06.6
          - openwrt:18.06.5
          - openwrt:18.06.4
          - openwrt:18.06.3
          - openwrt:18.06.2
          - openwrt:18.06.2
          - openwrt:18.06.1
          - openwrt:18.06.0
          - immortalwrt:21.02.6
          - immortalwrt:21.02.5
          - immortalwrt:21.02.4
      openwrt_board:
        description: "Select device board"
        required: false
        default: "all"
        type: choice
        options:
          - s905x-b860h
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.4"
        type: choice
        options:
          - 5.4
          - 5.10
          - 5.11
          - 5.12
          - 5.13
          - 5.14
          - 5.15
          - 5.16
          - 5.17
          - 5.18
          - 5.19
          - 6.0
          - 6.1
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "arfprsty810/kernel"
        type: choice
        options:
          - arfprsty810/kernel
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the kernel."
        required: false
        default: "arf.prsty_"
        type: choice
        options:
          - arf.prsty_
          - stable
          - flippy
          - dev
          - beta
env:
  TZ: America/New_York
  IMAGEBUILDER_SH: config-openwrt/arf-wrt/imagebuilder.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Build OpenWrt Rootfs [ ${{ inputs.releases_branch }} ]
        id: imagebuilder
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          RELEASES_BRANCH="${{ inputs.releases_branch }}"
          chmod +x ${IMAGEBUILDER_SH}
          ${IMAGEBUILDER_SH} ${RELEASES_BRANCH}
          echo "RELEASES_TAG=${RELEASES_BRANCH/:/_}" >> ${GITHUB_ENV}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clear server space
        if: ${{ steps.imagebuilder.outputs.status }} == 'success' && !cancelled()
        run: |
          cd openwrt/
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

      - name: Packaging OpenWrt
        if: ${{ steps.imagebuilder.outputs.status }} == 'success' && !cancelled()
        uses: arfprsty810/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          gh_token: ${{ secrets.GH_TOKEN }}

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ArfWrt_s905x-b860h-v1/v2
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            # What is ArfWrt?
            ArfWrt is openwrt original imagebuild custom for s905x-b860h-v1/v2
            ## ArfWrt Image information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: none
            - Default WIFI username: root
            - Default WIFI password: none
            ### OpenWrt Image Verification
            - sha256sum
